server:
  port: 8080

spring:
  jackson:
    default-property-inclusion: non_null
    deserialization:
      fail_on_unknown_properties: false
    serialization:
      fail_on_empty_beans: false
      write_dates_as_timestamps: false
    property-naming-strategy: SNAKE_CASE

  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
        jdbc:
          lob:
            non_contextual_creation: 1

  r2dbc:
    url: r2dbc:postgresql://${DB_HOST}/${DB_NAME}?schema=${DB_SCHEMA}
    username: ${DB_USER}
    password: ${DB_PASS}
    name: ${DB_NAME}

  flyway:
    enabled: true
    password: ${DB_PASS}
    user: ${DB_USER}
    url: jdbc:postgresql://${DB_HOST}/${DB_NAME}
    baseline-version: 1
    baseline-on-migrate: true
    schemas: ${DB_SCHEMA}

  kafka:
    bootstrap-servers:
      - ${KAFKA_URL}
    properties:
      auto.register.schemas: true
      specific.avro.reader: true
      basic.auth.credentials.source:
      sasl.mechanism: PLAIN
      schema.registry.url: ${KAFKA_SCHEMA_REGISTRY_URL}
      security.protocol: PLAINTEXT
      schema.registry.basic.auth.user.info: ""
      sasl.jaas.config: ""
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer

messaging:
  topic:
    consumer:
      user:
        active: true
        main-name: ellingtonb-queuing.user
        retry-name: ellingtonb-queuing.user-retry
        dlq-name: ellingtonb-queuing.user-dlq
