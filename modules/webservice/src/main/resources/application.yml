server:
  port: ${APP_PORT:8080}

management:
  server.port: ${MONITORING_PORT:8081}

spring:
  jackson:
    default-property-inclusion: non_null
    deserialization:
      fail_on_unknown_properties: false
    serialization:
      fail_on_empty_beans: false
      write_dates_as_timestamps: false
    property-naming-strategy: SNAKE_CASE

  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
        jdbc:
          lob:
            non_contextual_creation: 1

  r2dbc:
    url: r2dbc:postgresql://${DB_HOST}/${DB_NAME}?schema=${DB_SCHEMA}
    username: ${DB_USER}
    password: ${DB_PASS}
    name: ${DB_NAME}

  flyway:
    enabled: true
    password: ${DB_PASS}
    user: ${DB_USER}
    url: jdbc:postgresql://${DB_HOST}/${DB_NAME}
    baseline-version: 1
    baseline-on-migrate: true
    schemas: ${DB_SCHEMA}

  kafka:
    bootstrap-servers:
      - ${KAFKA_URL}
    properties:
      auto.register.schemas: true
      specific.avro.reader: true
      basic.auth.credentials.source:
      sasl.mechanism: PLAIN
      schema.registry.url: ${KAFKA_SCHEMA_REGISTRY_URL}
      security.protocol: PLAINTEXT
      schema.registry.basic.auth.user.info: ""
      sasl.jaas.config: ""
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer

cloud:
  aws:
    region:
      static: ${CLOUD_AWS_REGION_STATIC:us-east-1}
    credentials:
      instance-profile: ${CLOUD_AWS_CREDENTIALS_INSTANCE_PROFILE:false}
      access-key: ${CLOUD_AWS_CREDENTIALS_ACCESS_KEY:disabled}
      secret-key: ${CLOUD_AWS_CREDENTIALS_SECRET_KEY:disabled}
    sqs:
      endpoint: ${CLOUD_AWS_SQS_ENDPOINT:http://localhost:31526}
      enabled: true
      listener:
        auto-startup: true
